//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17462
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Text.Implementation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.VisualStudio.Text.Implementation.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to cancel an applied edit..
        /// </summary>
        internal static string CancelAppliedEdit {
            get {
                return ResourceManager.GetString("CancelAppliedEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to continue a canceled edit..
        /// </summary>
        internal static string ContinueCanceledEdit {
            get {
                return ResourceManager.GetString("ContinueCanceledEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is too large to open..
        /// </summary>
        internal static string FileTooLarge {
            get {
                return ResourceManager.GetString("FileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to change edit thread of TextBuffer..
        /// </summary>
        internal static string InvalidBufferThreadOwnershipChange {
            get {
                return ResourceManager.GetString("InvalidBufferThreadOwnershipChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edge inclusive projection source span must cover entire source TextBuffer..
        /// </summary>
        internal static string InvalidEdgeInclusiveSourceSpan {
            get {
                return ResourceManager.GetString("InvalidEdgeInclusiveSourceSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EdgeNegative source span must abut start of source TextBuffer..
        /// </summary>
        internal static string InvalidEdgeNegativeSourceSpan {
            get {
                return ResourceManager.GetString("InvalidEdgeNegativeSourceSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EdgePositive source span must abut end of source TextBuffer..
        /// </summary>
        internal static string InvalidEdgePositiveSourceSpan {
            get {
                return ResourceManager.GetString("InvalidEdgePositiveSourceSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent length calculation in projection snapshot..
        /// </summary>
        internal static string InvalidLengthCalculation {
            get {
                return ResourceManager.GetString("InvalidLengthCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent line count calculation in projection snapshot..
        /// </summary>
        internal static string InvalidLineCountCalculation {
            get {
                return ResourceManager.GetString("InvalidLineCountCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified IReadOnlyRegion doesn&apos;t belong to the correct TextBuffer..
        /// </summary>
        internal static string InvalidReadOnlyRegion {
            get {
                return ResourceManager.GetString("InvalidReadOnlyRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StringRebuilder enumerator is not at a valid position..
        /// </summary>
        internal static string InvalidRebuilderEnumerator {
            get {
                return ResourceManager.GetString("InvalidRebuilderEnumerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ITextSnapshot doesn&apos;t belong to the correct TextBuffer..
        /// </summary>
        internal static string InvalidSnapshot {
            get {
                return ResourceManager.GetString("InvalidSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to map to invalid target TextBuffer..
        /// </summary>
        internal static string InvalidTargetBuffer {
            get {
                return ResourceManager.GetString("InvalidTargetBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to edit TextBuffer on the wrong thread..
        /// </summary>
        internal static string InvalidTextBufferEditThread {
            get {
                return ResourceManager.GetString("InvalidTextBufferEditThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ITrackingSpan doesn&apos;t belong to the correct TextBuffer..
        /// </summary>
        internal static string InvalidTrackingSpan {
            get {
                return ResourceManager.GetString("InvalidTrackingSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified TextVersion doesn&apos;t belong to the correct TextBuffer..
        /// </summary>
        internal static string InvalidVersion {
            get {
                return ResourceManager.GetString("InvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot map down except from the top buffer..
        /// </summary>
        internal static string MapDownFromNonTopBuffer {
            get {
                return ResourceManager.GetString("MapDownFromNonTopBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Span is neither an ITrackingSpan nor a String literal.
        /// </summary>
        internal static string NeitherSpanNorString {
            get {
                return ResourceManager.GetString("NeitherSpanNorString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to introduce overlapping source spans..
        /// </summary>
        internal static string OverlappingSourceSpans {
            get {
                return ResourceManager.GetString("OverlappingSourceSpans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no read only regions to remove..
        /// </summary>
        internal static string RemoveNoReadOnlyRegion {
            get {
                return ResourceManager.GetString("RemoveNoReadOnlyRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to reuse an already applied edit..
        /// </summary>
        internal static string ReuseAppliedEdit {
            get {
                return ResourceManager.GetString("ReuseAppliedEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted TextBuffer edit operation while another edit is in progress..
        /// </summary>
        internal static string SimultaneousEdit {
            get {
                return ResourceManager.GetString("SimultaneousEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to create cyclic ProjectionBuffer..
        /// </summary>
        internal static string SourceBufferCycle {
            get {
                return ResourceManager.GetString("SourceBufferCycle", resourceCulture);
            }
        }
    }
}
